<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiong.blog.dao.CommentMapper" >
  <resultMap id="BaseResultMap" type="com.xiong.blog.model.Comment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="content_id" property="contentId" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, content_id,type, comment, create_time, create_user
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from comment
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectComments" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select
    <include refid="Base_Column_List" />
    from comment
    where 1=1
    <if test="type != null and type != ''" >
      and type  = #{type}
    </if>
    <if test="comment != null and comment != ''" >
      and comment like CONCAT('%',#{comment},'%')
    </if>
    order by  create_time desc
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xiong.blog.model.Comment" >
    insert into comment (id, content_id, type,comment,
      create_time, create_user
      )
    values (#{id,jdbcType=INTEGER}, #{contentId,jdbcType=INTEGER},#{type,jdbcType=INTEGER}, #{comment,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIME}, #{createUser,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xiong.blog.model.Comment" >
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="contentId != null" >
        content_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="comment != null" >
        comment,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="contentId != null" >
        #{contentId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIME},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiong.blog.model.Comment" >
    update comment
    <set >
      <if test="contentId != null" >
        content_id = #{contentId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="comment != null" >
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIME},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiong.blog.model.Comment" >
    update comment
    set content_id = #{contentId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      comment = #{comment,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIME},
      create_user = #{createUser,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <delete id="deleteByIds"  parameterType = "java.util.List">
    delete from comment where 1=2 or id in
    <foreach collection="list"  item="item" open="(" separator="," close=")"  >
     #{item}
    </foreach>
  </delete>
</mapper>